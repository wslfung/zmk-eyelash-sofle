#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

    behaviors {
        tpmt: tpmt {
            compatible = "zmk,behavior-hold-tap";
            label = "TPMT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC        &kp N1          &kp N2            &kp N3        &kp N4          &kp N5    &kp UP_ARROW     &kp N6  &kp N7               &kp N8        &kp N9             &kp N0                         &kp MINUS
&kp TAB        &kp Q           &kp W             &kp E         &kp R           &kp T     &kp DOWN_ARROW   &kp Y   &kp U                &kp I         &kp O              &kp P                          &kp BSLH
&kp BACKSPACE  &tpmt LCTRL A   &tpmt LEFT_ALT S  &tpmt LGUI D  &tpmt LSHIFT F  &kp G     &kp LEFT_ARROW   &kp H   &tpmt RIGHT_SHIFT J  &tpmt RGUI K  &tpmt RIGHT_ALT L  &tpmt RIGHT_CONTROL SEMICOLON  &kp APOS
&kp LSHFT      &kp Z           &kp X             &kp C         &kp V           &kp B     &kp RIGHT_ARROW  &kp N   &kp M                &kp COMMA     &kp DOT            &kp FSLH                       &kp RIGHT_SHIFT
&kp C_MUTE     &kp LC(INSERT)  &kp LS(INSERT)    &kp ENTER     &mo 1           &mo 2     &kp ENTER        &mo 1   &kp SPACE            &kp DELETE    &kp LC(PG_UP)      &kp LC(PG_DN)
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        nav {
            bindings = <
&kp F1      &kp F2           &kp F3          &kp F4           &kp F5           &kp F6             &mmv MOVE_UP     &kp F7      &kp F8     &kp F9            &kp F10            &kp F11    &kp F12
&trans      &kp GRAVE        &trans          &trans           &kp PRINTSCREEN  &mkp RCLK          &mmv MOVE_DOWN   &kp INSERT  &kp HOME   &kp UP            &kp END            &kp PG_UP  &trans
&trans      &trans           &trans          &trans           &trans           &trans             &mmv MOVE_LEFT   &kp DELETE  &kp LEFT   &kp DOWN          &kp RIGHT          &kp PG_DN  &trans
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &kp MINUS   &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans     &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans      &trans     &trans            &mkp MB4           &mkp MB5
            >;

            display-name = "nav";
            sensor-bindings = <&scroll_encoder>;
        };

        num {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &kp ASTERISK  &trans  &trans     &kp MINUS
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp N7  &kp N8        &kp N9  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp N4  &kp N5        &kp N6  &kp PLUS   &kp EQUAL
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp N1  &kp N2        &kp N3  &kp SLASH  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp N0  &kp DOT       &trans  &trans
            >;

            label = "num";
        };

        adjust {
            bindings = <
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp CAPS  &kp KP_NUMLOCK  &kp SCROLLLOCK  &trans  &trans  &trans
&trans       &trans        &trans        &trans        &trans        &trans          &mmv MOVE_DOWN   &trans    &trans          &trans          &trans  &trans  &trans
&trans       &trans        &trans        &trans        &trans        &trans          &mmv MOVE_LEFT   &trans    &trans          &trans          &trans  &trans  &trans
&bootloader  &trans        &trans        &trans        &trans        &trans          &mmv MOVE_RIGHT  &trans    &trans          &trans          &trans  &trans  &bootloader
&trans       &trans        &trans        &trans        &trans        &trans          &mkp LCLK        &trans    &trans          &trans          &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "adjust";
        };
    };
};
